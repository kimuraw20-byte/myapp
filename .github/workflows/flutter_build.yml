name: Flutter Build Android APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      # 1. استنساخ الكود
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 🔥 تحديث إصدار Gradle Plugin تلقائياً
      - name: Update Android Gradle Plugin Automatically
        run: |
          echo "🔧 تحديث إصدار Android Gradle Plugin إلى 8.1.1..."
          sed -i 's/classpath \x27com\.android\.tools\.build:gradle:8\.1\.0\x27/classpath \x27com.android.tools.build:gradle:8.1.1\x27/g' android/build.gradle
          sed -i 's/classpath \x27com\.android\.tools\.build:gradle:7\./classpath \x27com.android.tools.build:gradle:8.1.1\x27/g' android/build.gradle
          sed -i 's/classpath \x27com\.android\.tools\.build:gradle:8\.0\./classpath \x27com.android.tools.build:gradle:8.1.1\x27/g' android/build.gradle
          echo "✅ تم التحديث تلقائياً"

      # 3. تثبيت Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'
          cache: true

      # 4. إعداد JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 5. التحقق من التحديث
      - name: Verify Gradle Update
        run: |
          echo "📋 التحقق من إصدار Gradle:"
          grep "com.android.tools.build" android/build.gradle
          echo "📋 محتوى الملف بعد التحديث:"
          cat android/build.gradle | head -10

      # 6. قبول التراخيص
      - name: Accept Android licenses
        run: |
          flutter config --android-sdk $ANDROID_SDK_ROOT
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses || echo "تم تجاوز مشكلة التراخيص"
          flutter doctor --android-licenses

      # 7. تنظيف المشروع
      - name: Clean project
        run: flutter clean

      # 8. تثبيت dependencies
      - name: Install dependencies
        run: flutter pub get

      # 9. بناء APK مع تجاوز التحقق
      - name: Build APK with override
        run: |
          echo "🔄 جاري بناء APK مع تجاوز التحقق..."
          flutter build apk --release --verbose --android-skip-build-dependency-validation
          
          # إذا فشل، جرب بناء Gradle مباشرة
          if [ $? -ne 0 ]; then
            echo "❌ فشل بناء Flutter - جرب Gradle مباشرة..."
            cd android
            ./gradlew assembleRelease --android-skip-build-dependency-validation --no-daemon
            cd ..
          fi

      # 10. رفع APK
      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/apk/release/app-release.apk
          retention-days: 7

      # 11. رفع سجلات البناء
      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            android/build.gradle
            build_log.txt
          retention-days: 3

      # 12. إشعار النتيجة
      - name: Build result notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ تم بناء APK بنجاح!"
            echo "📦 يمكنك تحميله من قسم Artifacts"
          else
            echo "❌ فشل بناء APK"
            echo "🔍 راجع سجلات البناء للتفاصيل"
          fi
