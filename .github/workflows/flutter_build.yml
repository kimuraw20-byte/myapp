name: Flutter Build Android APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      # 1. استنساخ الكود
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. عرض هيكل المشروع للتشخيص
      - name: Diagnose project structure
        run: |
          echo "📁 هيكل المشروع:"
          find . -name "*.gradle" -o -name "pubspec.yaml" -o -name "AndroidManifest.xml" | head -20
          echo ""
          echo "📋 محتوى android directory:"
          ls -la android/ || echo "❌ مجلد android غير موجود"
          ls -la android/app/ || echo "❌ مجلد android/app غير موجود"

      # 3. تحديث Gradle Plugin تلقائياً
      - name: Update Android Gradle Plugin
        run: |
          if [ -f "android/build.gradle" ]; then
            echo "🔧 تحديث إصدار Gradle Plugin..."
            sed -i 's/com\.android\.tools\.build:gradle:[0-9]\.[0-9]\.[0-9]/com.android.tools.build:gradle:8.1.1/g' android/build.gradle
            sed -i 's/com\.android\.tools\.build:gradle:[0-9]\.[0-9]/com.android.tools.build:gradle:8.1.1/g' android/build.gradle
            echo "✅ تم التحديث"
            cat android/build.gradle | grep "com.android.tools.build"
          else
            echo "❌ ملف android/build.gradle غير موجود"
          fi

      # 4. تثبيت Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'
          cache: true

      # 5. إعداد JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 6. التحقق من الإعدادات
      - name: Verify environment
        run: |
          echo "🔄 إصدار Flutter:"
          flutter --version
          echo ""
          echo "🔄 إصدار Dart:"
          dart --version
          echo ""
          echo "🔄 إصدار Java:"
          java -version

      # 7. تنظيف شامل
      - name: Deep clean
        run: |
          echo "🧹 تنظيف شامل..."
          flutter clean
          rm -rf build/
          rm -rf .dart_tool/
          if [ -d "android" ]; then
            cd android
            ./gradlew clean --no-daemon || echo "Gradle clean failed"
            cd ..
          fi

      # 8. تثبيت dependencies مع التفاصيل
      - name: Install dependencies with details
        run: |
          echo "📦 تثبيت dependencies..."
          flutter pub get --verbose
          echo ""
          echo "🌳 شجرة dependencies:"
          flutter pub deps

      # 9. تحليل الكود
      - name: Analyze code
        run: |
          echo "🔍 تحليل الكود..."
          flutter analyze --fatal-infos --fatal-warnings || echo "تحليل الكود به تحذيرات"

      # 10. بناء APK مع محاولات متعددة
      - name: Build APK with multiple strategies
        run: |
          echo "🏗️ محاولة البناء الأساسية..."
          flutter build apk --release --verbose 2>&1 | tee build_log.txt || \
          (echo "❌ المحاولة الأولى فشلت - جرب المحاولة الثانية..." && \
          flutter build apk --release --no-tree-shake-icons --no-obfuscate --verbose 2>&1 | tee -a build_log.txt) || \
          (echo "❌ المحاولة الثانية فشلت - جرب Gradle مباشرة..." && \
          cd android && \
          ./gradlew assembleRelease --no-daemon --info 2>&1 | tee -a ../build_log.txt && \
          cd ..)

      # 11. البحث عن ملف APK المبنى
      - name: Find built APK
        run: |
          echo "🔍 البحث عن ملف APK..."
          find . -name "*.apk" -type f | head -10
          find . -path "*/outputs/*" -name "*.apk" -type f | head -10
          ls -la build/app/outputs/ || echo "❌ مجلد outputs غير موجود"
          ls -la build/app/outputs/flutter-apk/ || echo "❌ مجلد flutter-apk غير موجود"
          ls -la android/app/build/outputs/ || echo "❌ مجلد android outputs غير موجود"

      # 12. رفع APK إذا وجد
      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/apk/release/app-release.apk
            android/app/build/outputs/apk/release/app-release.apk
          retention-days: 7

      # 13. رفع سجلات البناء دائماً
      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            build_log.txt
            android/build.gradle
            pubspec.yaml
          retention-days: 3

      # 14. إشعار مفصل بالنتيجة
      - name: Detailed build result
        if: always()
        run: |
          echo "📊 نتيجة البناء: ${{ job.status }}"
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ البناء نجح!"
            echo "📦 APK جاهز للتحميل من Artifacts"
          else
            echo "❌ البناء فشل"
            echo "🔍 افحص سجلات البناء في Artifacts"
            echo "🔍 ابحث عن 'error' أو 'exception' في الملفات"
          fi
